# Adapted from https://github.com/prometheus-community/helm-charts/blob/main/.github/workflows/ci.yaml
name: CI
permissions: {}

on:
  pull_request:
    branches:
      - main

defaults:
  run:
    shell: bash

jobs:
  lint-test:
    name: Lint and Test Charts
    runs-on: ubuntu-24.04
    needs: docs-check
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: v3.18.1

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"

      - name: Set up chart-testing
        uses: helm/chart-testing-action@0d28d3144d3a25ea2cc349d6e59901c4ff469b3b # v2.7.0

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
          changed="$(ct list-changed --config .github/linters/ct.yaml)"
          if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            echo "changed_list=\"${changed//$'\n'/ }\"" >> "$GITHUB_OUTPUT"
          fi

      - name: Run chart-testing (lint)
        run: ct lint --config .github/linters/ct.yaml

      - name: Create kind cluster
        uses: helm/kind-action@a1b0e391336a6ee6713a0583f8c6240d70863de3 # v1.12.0
        if: steps.list-changed.outputs.changed == 'true'

      - name: Run chart-testing (install)
        run: ct install --config .github/linters/ct.yaml

  super-linter:
    name: Lint All
    runs-on: ubuntu-24.04
    needs: docs-check
    permissions:
      contents: read
    steps:
      - name: Checkout Code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Lint Code Base
        uses: super-linter/super-linter/slim@12150456a73e248bdc94d0794898f94e23127c88 # v7.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINTER_RULES_PATH: .github/linters
          MULTI_STATUS: false
          VALIDATE_ALL_CODEBASE: false
          # If you set any of the VALIDATE_[LANGUAGE] variables to true, super-linter defaults to leaving any unset variable to false (only validate those languages).
          VALIDATE_BASH: true
          VALIDATE_BASH_EXEC: true
          # VALIDATE_CHECKOV: true - always scans everything and all charts have too much errors
          VALIDATE_EDITORCONFIG: true
          VALIDATE_ENV: true
          VALIDATE_GITHUB_ACTIONS: true
          VALIDATE_GITLEAKS: true
          VALIDATE_JSON: true
          VALIDATE_MARKDOWN: true
          VALIDATE_NATURAL_LANGUAGE: true
          VALIDATE_PYTHON: true
          #VALIDATE_RENOVATE: false # does not support newest renovate config
          VALIDATE_SHELL_SHFMT: true
          VALIDATE_XML: true

  docs-check:
    name: Check Charts Docs
    permissions:
      contents: write
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Ensure documentation is updated
        uses: docker://jnorwood/helm-docs:v1.14.2

      - name: Fail or Commit linted files
        env:
          PULL_BRANCH: ${{ github.event.pull_request.head.ref }}
        run: |
          if git diff --exit-code; then
            echo -e "\n####### Git is clean - No changes on doc generation\n"
          else
            if [ "${{ github.event.pull_request.head.repo.full_name }}" = "ocraviotto/helm-charts" ]; then
              git config --global user.name "${{ github.actor }}"
              git config --global user.email "${{ github.actor }}@users.noreply.github.com"

              # Make sure we're on the correct branch
              git fetch origin "$PULL_BRANCH"
              git checkout "$PULL_BRANCH"

              # Only README - make sure not just on root!
              git add ':(icase)**/README*'

              # Commit only if changes exist
              if git diff --cached --exit-code; then
                echo "No README changes staged."
              else
                git commit -m 'chore(docs): update generated helm-docs'
                # Push back safely
                git pull --rebase origin "$PULL_BRANCH"
                git push --force-with-lease origin "$PULL_BRANCH"
              fi
            else
              # Fail if the pull_request is from a fork
              git status
              echo -e "\n####### Git changes detected! Run helm-docs locally and commit README updates.\n"
              exit 1
            fi
          fi
