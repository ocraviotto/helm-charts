apiVersion: v1
kind: Service
metadata:
  {{- with .Values.museum.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "ente.labels" . | nindent 4 }}
    app.kubernetes.io/component: museum
  name: {{ include "ente.fullname" . }}-museum
  namespace: {{ .Release.Namespace }}
spec:
  type: {{ .Values.museum.service.type }}
  ports:
    - port: {{ .Values.museum.service.port }}
      targetPort: {{ ternary 443 8080 .Values.museum.tls.enabled }}
      protocol: TCP
      name: http
  selector:
    {{- include "ente.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: museum
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    {{- include "ente.labels" . | nindent 4 }}
    app.kubernetes.io/component: museum
  name: {{ include "ente.fullname" . }}-museum
  namespace: {{ .Release.Namespace }}
spec:
  {{- if not .Values.autoscaling.museum.enabled }}
  replicas: {{ .Values.museum.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "ente.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: museum
  template:
    metadata:
      annotations:
        checksum/config: {{ include "ente.config.checksum" . | quote }}
        {{- with (.Values.museum.podAnnotations | default .Values.podAnnotations) }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "ente.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: museum
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ente.serviceAccount.name" . }}
      securityContext:
        {{- .Values.museum.podSecurityContext | default .Values.podSecurityContext | toYaml | nindent 8 }}
      containers:
        - name: museum
          securityContext:
            {{- .Values.museum.securityContext | default .Values.securityContext | toYaml | nindent 12 }}
          image: "{{ .Values.museum.image.registry }}/{{ .Values.museum.image.repository }}:{{ .Values.museum.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.museum.image.pullPolicy }}
          {{- range .Values.museum.extraEnvFromSecret }}
          envFrom:
            - secretRef:
                name: {{ . }}
          {{- end }}
          env:
            # ENVIRONMENT is used to determine the yaml to load under configurations/
            # but also not to load e.g. billing...
            # this should not require local TBH, but for now ensuring it does
            - name: ENVIRONMENT
              value: local
            # Required if we weren't using "local" for environment, as it otherwise expects a file
            # - name: ENTE_LOG_FILE
            #   value: "/dev/stdout"
          ports:
            - name: http
              containerPort: {{ ternary 443 8080 .Values.museum.tls.enabled }}
              protocol: TCP
            {{- if .Values.museum.metrics.enabled }}
            - name: metrics
              containerPort: 2112
              protocol: TCP
            {{- end }}
          livenessProbe:
            httpGet:
              path: /ping
              port: {{ ternary 443 8080 .Values.museum.tls.enabled }}
              {{- if .Values.museum.tls.enabled }}
              scheme: HTTPS
              httpHeaders:
              - name: Host
                value: {{ include "ente.hostname.api" . }}
              {{- end }}
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /ping
              port: {{ ternary 443 8080 .Values.museum.tls.enabled }}
              {{- if .Values.museum.tls.enabled }}
              scheme: HTTPS
              httpHeaders:
              - name: Host
                value: {{ include "ente.hostname.api" . }}
              {{- end }}
            periodSeconds: 30
          resources:
            {{- toYaml .Values.museum.resources | nindent 12 }}
          volumeMounts:
            # ConfigMap has a museum.yaml key
            - name: museum-config
              mountPath: /museum.yaml
              subPath: museum.yaml
              readOnly: true
            - name: ente-credentials
              mountPath: /credentials.yaml
              subPath: credentials.yaml
              readOnly: true
            - name: data
              mountPath: /data
            {{- if and .Values.museum.tls.enabled .Values.museum.tls.secretName }}
            # ente expects tls.cert and tls.key, not tls.crt - https://github.com/ente-io/ente/blob/main/server/cmd/museum/main.go#L795-L812
            - name: tls-secret
              mountPath: /credentials/tls.cert
              subPath: tls.crt
              readOnly: true
            - name: tls-secret
              mountPath: /credentials/tls.key
              subPath: tls.key
              readOnly: true
            {{- end }}
      volumes:
        - name: ente-credentials
          secret:
            secretName: {{ .Values.enteCredentials.existingSecret | default (printf "%s-credentials" (include "ente.fullname" .)) }}
        - name: museum-config
          configMap:
            name: {{ include "ente.fullname" . }}-museum-config
        {{- if and .Values.museum.tls.enabled .Values.museum.tls.secretName }}
        - name: tls-secret
          secret:
            secretName: {{ .Values.museum.tls.secretName }}
        {{- end }}
        {{- if .Values.museum.persistence.enabled }}
        - name: data
          {{- if .Values.museum.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ .Values.museum.persistence.existingClaim }}
          {{- else }}
          persistentVolumeClaim:
            claimName: {{ include "ente.fullname" . }}-museum
          {{- end }}
        {{- else }}
        - name: data
          emptyDir: {}
        {{- end }}
      {{- with .Values.museum.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.museum.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.museum.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if and .Values.museum.persistence.enabled (not .Values.museum.persistence.existingClaim) }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "ente.fullname" . }}-museum
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "ente.labels" . | nindent 4 }}
    app.kubernetes.io/component: museum
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.museum.persistence.size }}
  {{- if .Values.museum.persistence.storageClassName }}
  storageClassName: {{ .Values.museum.persistence.storageClassName }}
  {{- end }}
{{- end }}
